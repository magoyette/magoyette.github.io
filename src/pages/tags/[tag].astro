---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import ShortDate from "../../components/ShortDate.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  const notes = await getCollection("notes");
  const allPosts = [...articles, ...notes].sort(
    (a, b) =>
      (a.data.pubDate?.valueOf() ?? 0) - (b.data.pubDate?.valueOf() ?? 0)
  );
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      !tag || !post.data.tags ? false : post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}
const { tag } = Astro.params;
const { posts } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <section>
        <div class="container">
          <article class="card">
            <div class="card-content">
              <h1 class="title is-family-secondary">
                Articles and notes tagged with {tag}
              </h1>
              <ul>
                {
                  posts.map((post: any) => (
                    <li>
                      <ShortDate date={post.data.pubDate} />
                      <a href={`/${post.collection}/${post.slug}/`}>
                        {post.data.title}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          </article>
        </div>
      </section>
    </main></body
  >
</html>
